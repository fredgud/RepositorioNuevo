BASE DE DATOS: 

USE master;
GO

IF( NOT EXISTS ( SELECT 1 FROM sys.sysdatabases WHERE name='BOOKSTORE' ) )
BEGIN
	CREATE DATABASE BOOKSTORE;
END;
GO

USE BOOKSTORE;
GO


-- ======================================================
-- ELIMINACIÓN DE TABLAS
-- ======================================================

IF( EXISTS ( SELECT 1 FROM sys.sysobjects 
	WHERE name='VENTA' and xtype = 'u') )
BEGIN
	DROP TABLE dbo.VENTA;
END;
GO

IF( EXISTS ( SELECT 1 FROM sys.sysobjects 
	WHERE name='PUBLICACION' and xtype = 'u') )
BEGIN
	DROP TABLE dbo.PUBLICACION;
END;
GO

IF( EXISTS ( SELECT 1 FROM sys.sysobjects 
	WHERE name='TIPO' and xtype = 'u') )
BEGIN
	DROP TABLE dbo.TIPO;
END;
GO

IF( EXISTS ( SELECT 1 FROM sys.sysobjects 
	WHERE name='PROMOCION' and xtype = 'u') )
BEGIN
	DROP TABLE dbo.PROMOCION;
END;
GO

IF( EXISTS ( SELECT 1 FROM sys.sysobjects 
	WHERE name='USUARIO' and xtype = 'u') )
BEGIN
	DROP TABLE dbo.USUARIO;
END;
GO

IF( EXISTS ( SELECT 1 FROM sys.sysobjects 
	WHERE name='EMPLEADO' and xtype = 'u') )
BEGIN
	DROP TABLE dbo.EMPLEADO;
END;
GO

IF( EXISTS ( SELECT 1 FROM sys.sysobjects 
	WHERE name='CONTROL' and xtype = 'u') )
BEGIN
	DROP TABLE dbo.CONTROL;
END;
GO  
  
-- ==========================================================
-- Creación de la Tablas
-- ==========================================================


CREATE TABLE dbo.EMPLEADO
(
	idempleado           INT NOT NULL ,
	apellido             VARCHAR(100) NOT NULL ,
	nombre               VARCHAR(100) NOT NULL ,
	direccion            VARCHAR(150) NOT NULL ,
	email                VARCHAR(100) NOT NULL ,
CONSTRAINT  XPKempleado PRIMARY KEY (idempleado)
);
GO


CREATE TABLE dbo.USUARIO
(
	idempleado           INT NOT NULL ,
	usuario              VARCHAR(20) NOT NULL ,
	clave                VARCHAR(100) NOT NULL ,
	activo               INT NOT NULL ,
CONSTRAINT  XPKUSUARIO PRIMARY KEY (idempleado),
CONSTRAINT FK_USUARIO_EMPLEADO FOREIGN KEY (idempleado) REFERENCES dbo.EMPLEADO (idempleado)
);
GO

CREATE TABLE dbo.TIPO
(
	idtipo               CHAR(3) NOT NULL ,
	descripcion          VARCHAR(100) NOT NULL ,
	contador             INT NOT NULL ,
CONSTRAINT  XPKTipo PRIMARY KEY (idtipo)
);
GO


CREATE TABLE DBO.PUBLICACION
(
	idpublicacion        CHAR(8) NOT NULL ,
	titulo               VARCHAR(150) NOT NULL ,
	idtipo               CHAR(3) NOT NULL ,
	autor                VARCHAR(150) NOT NULL ,
	nroedicion           INT NOT NULL ,
	precio               MONEY NOT NULL ,
	stock                INT NOT NULL ,
CONSTRAINT  XPKPublicacion PRIMARY KEY (idpublicacion),
CONSTRAINT FK_PUBLICACION_TIPO FOREIGN KEY (idtipo) REFERENCES dbo.TIPO (idtipo)
);
GO


CREATE TABLE dbo.VENTA
(
	idventa              INT NOT NULL ,
	cliente              VARCHAR(150) NOT NULL ,
	fecha                DATETIME NOT NULL ,
	idempleado           INT NOT NULL ,
	idpublicacion        CHAR(8) NOT NULL ,
	cantidad             INT NOT NULL ,
	precio               MONEY NOT NULL ,
	dcto                 MONEY NOT NULL ,
	subtotal             MONEY NOT NULL ,
	impuesto             MONEY NOT NULL ,
	total                MONEY NOT NULL ,
CONSTRAINT  XPKVenta PRIMARY KEY (idventa),
CONSTRAINT FK_VENTA_PUBLICACION FOREIGN KEY (idpublicacion) REFERENCES dbo.PUBLICACION (idpublicacion),
CONSTRAINT FK_VENTA_EMPLEADO FOREIGN KEY (idempleado) REFERENCES dbo.EMPLEADO (idempleado)
);
GO


CREATE TABLE dbo.PROMOCION
(
	idpromocion          INT NOT NULL ,
	cantmin              INT NOT NULL ,
	cantmax              INT NOT NULL ,
	porcentaje           NUMERIC(8,2) NOT NULL ,
CONSTRAINT  XPKPromocion PRIMARY KEY (idpromocion)
);
GO


CREATE TABLE dbo.CONTROL
(
	parametro            VARCHAR(50) NOT NULL ,
	valor                VARCHAR(150) NOT NULL ,
CONSTRAINT  XPKControl PRIMARY KEY (parametro)
);
GO

-- ==========================================================
-- Cargar Datos de Prueba
-- ==========================================================

-- Tabla: tipo

   Insert Into dbo.tipo( idtipo,descripcion,contador ) Values( 'LIB','Libro',10 );
   Insert Into dbo.tipo( idtipo,descripcion,contador ) Values( 'REV','Revista',3 );
   Insert Into dbo.tipo( idtipo,descripcion,contador ) Values( 'SEP','Separata',8 );
	GO

-- Libros

   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('LIB00001','LIB','Power Builder','William B. Heys',1, 50.00,1000);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('LIB00002','LIB','Visual Basic','Joel Carrasco',2,45.00,1500);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('LIB00003','LIB','Programación C/S con VB','Kenneth L. Spenver',1,45.00,450);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('LIB00004','LIB','JavaScript a través de Ejemplos','Jery Honeycutt',1,35.00,720);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('LIB00005','LIB','UNIX en 12 lecciones','Juan Matías Matías',1,25.00,500);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('LIB00006','LIB','Visual Basic y SQL Server','Eric G. Coronel Castillo',1,35.00,5000);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('LIB00007','LIB','Power Builder y SQL Server','Eric G. Coronel Castillo',1,35.00,5000);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('LIB00008','LIB','PHP y MySQL','Eric G. Coronel Castillo',1,55.00,5000);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('LIB00009','LIB','Lenguaje de Programación Java 2','Eric G. Coronel Castillo',1,55.00,5000);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('LIB00010','LIB','Oracle Database','Eric G. Coronel Castillo',1,75.00,5000);
	GO

-- Revistas

   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('REV00001','REV','Eureka','GrapPeru',1,4.00,770);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('REV00002','REV','El Programador','Desarrolla Software SAC',1,6.00,1200);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('REV00003','REV','La Revista del Programador','DotNET SAC',1,10.00,590);
	GO

-- Separatas

   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('SEP00001','SEP','Java Orientado a Objetos','Eric G. Coronel C.',1,20.00,500);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('SEP00002','SEP','Desarrollo Web con Java','Eric G. Coronel C.',1,20.00,500);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('SEP00003','SEP','Electrónica Aplicada','Hugo Valencia M.',1,20.00,500);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('SEP00004','SEP','Circuitos Digitales','Hugo Valencia M.',1,20.00,500);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('SEP00005','SEP','SQL Server Básico','Sergio Matsukawa',1,20.00,500);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('SEP00006','SEP','SQL Server Avanzado','Sergio Matsukawa',1,20.00,500);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('SEP00007','SEP','Windows Server Fundamentos','Hugo Valencia',1,8.00,1190);
   Insert Into dbo.publicacion( idpublicacion,idtipo,titulo,autor,nroedicion,precio,stock ) 
    Values('SEP00008','SEP','windows Server Administración','Sergio Matsukawa ',1,10.00,2000);
	GO

-- promociones

   Insert Into dbo.promocion(idpromocion,cantmin,cantmax,porcentaje) Values(1,1,4,0);
   Insert Into dbo.promocion(idpromocion,cantmin,cantmax,porcentaje) Values(2,5,10,0.05);
   Insert Into dbo.promocion(idpromocion,cantmin,cantmax,porcentaje) Values(3,11,20,0.10);
   Insert Into dbo.promocion(idpromocion,cantmin,cantmax,porcentaje) Values(4,21,50,0.13);
   Insert Into dbo.promocion(idpromocion,cantmin,cantmax,porcentaje) Values(5,51,100,0.16);
   Insert Into dbo.promocion(idpromocion,cantmin,cantmax,porcentaje) Values(6,101,10000,0.20);
	GO

-- empleados

   Insert Into dbo.empleado(idempleado,apellido,nombre,direccion,email) 
     Values(1,'AGUERO RAMOS','EMILIO','Lima','emilio@gmail.com');
   Insert Into dbo.empleado(idempleado,apellido,nombre,direccion,email) 
     Values(2,'SANCHEZ ROMERO','KATHIA','Miraflores','kathia@yahoo.es');
   Insert Into dbo.empleado(idempleado,apellido,nombre,direccion,email) 
     Values(3,'LUNG WON','FELIX','Los Olivos','gato@hotmail.com');
   Insert Into dbo.empleado(idempleado,apellido,nombre,direccion,email) 
     Values(4,'CASTILLO RAMOS','EDUARDO','Barrios altos','lalo@gmail.com');
   Insert Into dbo.empleado(idempleado,apellido,nombre,direccion,email) 
     Values(5,'MILICICH FLORES','LAURA','Collique','laura@usil.pe');
   Insert Into dbo.empleado(idempleado,apellido,nombre,direccion,email) 
     Values(6,'DELGADO BARRERA','KENNETH','La punta','pochita@gmail.com');
   Insert Into dbo.empleado(idempleado,apellido,nombre,direccion,email) 
     Values(7,'GARCIA SOLIS','JOSE ELVIS','Barranco','pepe@gmail.com');
   GO


 -- usuarios  
   
   Insert Into dbo.usuario(idempleado,usuario,clave,activo) Values(1,'eaguero','cazador',1);
   Insert Into dbo.usuario(idempleado,usuario,clave,activo) Values(2,'ksanchez','suerte',1);
   Insert Into dbo.usuario(idempleado,usuario,clave,activo) Values(3,'flung','por100pre',0);
   Insert Into dbo.usuario(idempleado,usuario,clave,activo) Values(4,'ecastillo','hastalavista',1);
   Insert Into dbo.usuario(idempleado,usuario,clave,activo) Values(5,'lmilicich','turuleka',0);
   Insert Into dbo.usuario(idempleado,usuario,clave,activo) Values(6,'kdelgado','noimporta',1);   
   GO

-- ventas

   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(01,'ISIL',   05,GETDATE() - 60,'LIB00003',2,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(02,'UNI',    01,GETDATE() - 59,'REV00002',4,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(03,'Pedro',  03,GETDATE() - 58,'LIB00005',6,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(04,'Pablo',  02,GETDATE() - 58,'SEP00002',1,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(05,'Vilma',  01,GETDATE() - 57,'LIB00003',3,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(06,'Betty',  05,GETDATE() - 57,'REV00002',7,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(07,'Mercy',  06,GETDATE() - 56,'LIB00010',3,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(08,'Cesar', 03,GETDATE() - 55,'SEP00002',5,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(09,'Delia',  06,GETDATE() - 54,'LIB00006',8,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(10,'Nora',   05,GETDATE() - 53 ,'SEP00008',2,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(11,'Marcelo',02,GETDATE() - 52,'SEP00007',5,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(12,'Edgar',  02,GETDATE() - 51,'LIB00006',3,0,0,0,0,0);
	GO

  insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(13,'IPAE',   03,GETDATE() - 50,'LIB00003',2,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(14,'ISL',    06,GETDATE() - 49,'REV00002',4,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(15,'UNI',    01,GETDATE() - 47,'LIB00005',6,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(16,'Carmen', 03,GETDATE() - 47,'SEP00005',1,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(17,'Delia',  05,GETDATE() - 47,'LIB00003',3,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(18,'Ricardo',01,GETDATE() - 40,'REV00002',7,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(19,'Claudia',04,GETDATE() - 37,'LIB00005',3,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(20,'Roberto',06,GETDATE() - 37,'SEP00006',5,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(21,'Nora',  02,GETDATE() - 32,'LIB00006',8,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(22,'Elena',  01,GETDATE() - 32,'SEP00004',2,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(23,'Cynthia',04,GETDATE() - 29,'SEP00007',5,0,0,0,0,0);
   insert Into dbo.venta (idventa,cliente,idempleado,fecha,idpublicacion,cantidad,precio,dcto,subtotal,impuesto,total)
    values(24,'Alejandra',03,GETDATE() - 29,'LIB00007',3,0,0,0,0,0);
	GO

Codigos:

--Función para calcular el subtotal de una venta:
Create FUNCTION dbo.CalcularSubtotal(@cantidad INT, @precio MONEY, @descuento MONEY)
RETURNS MONEY
as
BEGIN
	DECLARE @subtotal MONEY
	SET @subtotal =(@cantidad * @precio)-@descuento
	RETURN @subtotal
END;

-- Ejemplo de uso
DECLARE @cantidad INT = 5;
DECLARE @precio MONEY = 20.00;
DECLARE @descuento MONEY = 2.50;

SELECT dbo.CalcularSubtotal(@cantidad, @precio, @descuento) AS Subtotal;

--Función para contar el número de ventas por empleado:
CREATE FUNCTION dbo.ContarVentasPorEmpleado(@idempleado INT)
returns INT
AS
BEGIN
	DECLARE @count INT
	SELECT @count = COUNT(*) FROM dbo.VENTA where idempleado = @idempleado
	RETURN @count

END;

-- Ejemplo de uso
DECLARE @idempleado INT = 3;

SELECT dbo.ContarVentasPorEmpleado(@idempleado) AS CantidadDeVentas;

--Función para obtener el monto total de ventas de un cliente
CREATE FUNCTION dbo.ObtenerMontoTotalDeVentas(@cliente VARCHAR(150))
RETURNS MONEY
AS
BEGIN
	DECLARE @total MONEY
	SELECT @total = SUM(total) FROM dbo.VENTA WHERE cliente = @cliente
	RETURN @total
END;

-- Ejemplo de uso
DECLARE @cliente VARCHAR(150) = 'Claudia';

SELECT dbo.ObtenerMontoTotalDeVentas(@cliente) AS MontoTotalDeVentas;

--Trigger para actualizar el contador de tipo cuando se inserta una nueva publicación
CREATE TRIGGER dbo.ActualizarContadorTipo
ON dbo.PUBLICACION
AFTER INSERT
AS
BEGIN
    UPDATE TIPO
    SET contador = contador + 1
    FROM TIPO t
    JOIN INSERTED i ON t.idtipo = i.idtipo
END;

INSERT INTO PUBLICACION (idpublicacion, idtipo, titulo, autor, nroedicion, precio, stock)
VALUES ('LIB00011', 'LIB', 'Nuevo Libro', 'Autor Nuevo', 1, 25.00, 100);

-- El trigger se ejecutará automáticamente y actualizará el contador de tipo 'LIB'.


--Trigger para aplicar descuentos automáticamente según la promoción
CREATE TRIGGER dbo.AplicarDescuentoPorPromocion
ON dbo.VENTA
AFTER INSERT
AS
BEGIN
    UPDATE VENTA
    SET dcto = p.porcentaje * v.precio
    FROM VENTA v
    JOIN INSERTED i ON v.idventa = i.idventa
    JOIN PROMOCION p ON v.cantidad BETWEEN p.cantmin AND p.cantmax
END;

INSERT INTO VENTA (idventa, cliente, fecha, idempleado, idpublicacion, cantidad, precio, dcto, subtotal, impuesto, total)
VALUES (25, 'ClienteX', GETDATE(), 1, 'LIB00001', 5, 10.00, 0.00, 0.00, 0.00, 0.00);

--Vista para mostrar información básica de ventas
CREATE VIEW dbo.InformacionDeVentas AS
SELECT idventa, cliente, fecha, total
FROM VENTA;

select * from dbo.InformacionDeVentas
--Vista para mostrar detalles de ventas con nombres de empleados y publicaciones
CREATE VIEW dbo.DetallesDeVentas AS
SELECT v.idventa, v.cliente, v.fecha, e.nombre AS nombre_empleado, p.titulo AS titulo_publicacion, v.cantidad, v.precio, v.dcto, v.subtotal, v.impuesto, v.total
FROM VENTA v
JOIN EMPLEADO e ON v.idempleado = e.idempleado
JOIN PUBLICACION p ON v.idpublicacion = p.idpublicacion;

select * from dbo.DetallesDeVentas

--Vista para mostrar el resumen de ventas por empleado y tipo de publicación
CREATE VIEW dbo.ResumenDeVentas AS
SELECT e.nombre AS nombre_empleado, t.descripcion AS tipo_publicacion, COUNT(*) AS cantidad_ventas, SUM(v.total) AS total_ventas
FROM VENTA v
JOIN EMPLEADO e ON v.idempleado = e.idempleado
JOIN PUBLICACION p ON v.idpublicacion = p.idpublicacion
JOIN TIPO t ON p.idtipo = t.idtipo
GROUP BY e.nombre, t.descripcion;

select * from dbo.DetallesDeVentas

--procedimiento permite agregar un nuevo empleado a la base de datos BOOKSTORE

USE BOOKSTORE;
GO

-- Crear el procedimiento almacenado
ALTER PROCEDURE dbo.AgregarEmpleado
	@idempleado VARCHAR(100),						
    @apellido VARCHAR(100),
    @nombre VARCHAR(100),
    @direccion VARCHAR(150),
    @email VARCHAR(100)
AS
BEGIN
    INSERT INTO EMPLEADO (idempleado,apellido, nombre, direccion, email)
    VALUES (@idempleado,@apellido, @nombre, @direccion, @email);
END;

USE BOOKSTORE;
GO

-- Ejecutar el procedimiento para agregar un nuevo empleado
USE BOOKSTORE;
GO

-- Ejecutar el procedimiento para agregar un nuevo empleado
EXEC dbo.AgregarEmpleado
	@idempleado = 55,
    @apellido = 'Gómez',
    @nombre = 'Laura',
    @direccion = 'Lima',
    @email = 'laura@example.com';


--procedimiento almacenado permite registrar una venta en la base de datos BOOKSTORE
USE BOOKSTORE;
GO
